name: Github Actions Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build1:
    name:  OpenMPI Py3.6 Debug
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with: 
        python-version: '3.6'

    - name: Install Dependencies
      run: sudo apt-get -y install libfftw3-dev openmpi-bin libopenmpi-dev clang-format

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: >
           cmake -B ${{github.workspace}}/build 
           -DCMAKE_BUILD_TYPE=Release
           -DCMAKE_CXX_COMPILER=mpicxx
           -DCMAKE_C_COMPILER=mpicc
           -DCMAKE_Fortran_COMPILER=mpif90
           -DPYTHON_EXECUTABLE=`which python`

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build -j 2

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -VV -C ${{env.BUILD_TYPE}}
