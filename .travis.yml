language: cpp
sudo: false

jobs:
  include:
    - stage: format check
      script: ./tools/check_style.sh
    - stage: build and test
      os: linux
#      compiler: clang
      addons:
        apt:
          sources:
          - llvm-toolchain-precise-3.6
          - ubuntu-toolchain-r-test
          packages:
          - liblapack-dev
          - libfftw3-dev
          - clang-3.6
          - gfortran
          - mpich2
      env:
        - NAME='clang'
        - PYTHON_VER='3.6'
        - CXX_COMPILER='clang++-3.6'
        - C_COMPILER='clang-3.6'
        - Fortran_COMPILER='gfortran'
        - BUILD_TYPE='Release'
      install:
      - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
      - bash miniconda.sh -b -p $HOME/miniconda
      - export PATH="$HOME/miniconda/bin:$PATH"
      - hash -r
      - conda config --set always_yes yes --set changeps1 no
      - conda update -q conda
      - conda info -a
      - conda create -q -n helpme python=$PYTHON_VER numpy cmake
      - source activate helpme
      - conda list
      before_script:
      - python -V
      - python -c 'import numpy; print(numpy.version.version)'
      - cd ${TRAVIS_BUILD_DIR}
      - export CXX=${CXX_COMPILER}
      - export CC=${C_COMPILER}
      - export FC=${Fortran_COMPILER}
      - export MPI_CXX=${CXX}
      - export MPI_CC=${CC}
      - export MPI_F90=${FC}
      - export CTEST_OUTPUT_ON_FAILURE=1
      - ${CXX_COMPILER} --version
      - ${Fortran_COMPILER} --version
      - ${C_COMPILER} --version
      - >
          cmake -Bbuild -H.
          -DCMAKE_BUILD_TYPE=${BUILD_TYPE}
          -DCMAKE_CXX_COMPILER=/usr/local/bin/mpicxx
          -DCMAKE_C_COMPILER=/usr/local/bin/mpicc
          -DCMAKE_Fortran_COMPILER=/usr/local/bin/mpif90
          -DPYTHON_EXECUTABLE="${HOME}/miniconda/envs/helpme/bin/python"
      - cd build
      - make -j 2
      script: ctest -VV -j 2
    - stage: build and test
      os: linux
#      compiler: clang
      addons:
        apt:
          sources:
          - llvm-toolchain-precise-3.6
          - ubuntu-toolchain-r-test
          packages:
          - mpich2
          - lcov
          - liblapack-dev
          - libfftw3-dev
          - g++-4.9
          - gcc-4.9
          - gfortran-4.9
      env:
        - NAME='gcc'
        - PYTHON_VER='2.7'
        - CXX_COMPILER='g++-4.9'
        - C_COMPILER='gcc-4.9'
        - Fortran_COMPILER='gfortran-4.9'
        - BUILD_TYPE='Debug'
      after_success:
          # Creating report
        - cd ${TRAVIS_BUILD_DIR}
        - lcov --directory . --capture --output-file coverage.info # capture coverage info
        - lcov --remove coverage.info '/usr/*' '*single_include*'  --output-file coverage.info # filter out system
        - lcov --list coverage.info #debug info
        # Uploading report to CodeCov
        - bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"
      install:
      - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
      - bash miniconda.sh -b -p $HOME/miniconda
      - export PATH="$HOME/miniconda/bin:$PATH"
      - hash -r
      - conda config --set always_yes yes --set changeps1 no
      - conda update -q conda
      - conda info -a
      - conda create -q -n helpme python=$PYTHON_VER numpy cmake
      - source activate helpme
      - conda list
      before_script:
      - python -V
      - python -c 'import numpy; print(numpy.version.version)'
      - cd ${TRAVIS_BUILD_DIR}
      - export CXX=${CXX_COMPILER}
      - export CC=${C_COMPILER}
      - export FC=${Fortran_COMPILER}
      - export MPI_CXX=${CXX}
      - export MPI_CC=${CC}
      - export MPI_F90=${FC}
      - export CTEST_OUTPUT_ON_FAILURE=1
      - ${CXX_COMPILER} --version
      - ${Fortran_COMPILER} --version
      - ${C_COMPILER} --version
      - >
          cmake -Bbuild -H.
          -DCMAKE_BUILD_TYPE=${BUILD_TYPE}
          -DENABLE_CODE_COVERAGE=ON
          -DCMAKE_CXX_COMPILER=/usr/local/bin/mpicxx
          -DCMAKE_C_COMPILER=/usr/local/bin/mpicc
          -DCMAKE_Fortran_COMPILER=/usr/local/bin/mpif90
          -DPYTHON_EXECUTABLE="${HOME}/miniconda/envs/helpme/bin/python"
      - cd build
      - make -j 2
      script: ctest -VV -j 2
